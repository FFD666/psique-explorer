# Importamos o Streamlit e agora a biblioteca do Google para IA Generativa
import streamlit as st
import google.generativeai as genai

# --- CONFIGURA√á√ÉO DA IA ---
# Cole aqui a sua Chave de API que voc√™ acabou de gerar no Google AI Studio.
# √â crucial que ela esteja entre as aspas.
GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]

# Configura a biblioteca do Google com a sua chave.
genai.configure(api_key=GOOGLE_API_KEY)
# Define qual modelo de IA vamos usar.
modelo = genai.GenerativeModel('gemini-1.5-flash')


# --- A FUN√á√ÉO QUE "LIGA" PARA A IA ---
def consultar_ia(conceito):
    # Este √© o "prompt", a instru√ß√£o que damos para a IA.
    # √â aqui que a m√°gica acontece. N√≥s dizemos como ela deve se comportar.
    prompt_template = f"""
    Aja como um professor de psicologia especialista, chamado 'Psique Explorer'.
    Sua miss√£o √© explicar o conceito psicol√≥gico '{conceito}' de forma clara, did√°tica e estruturada para um estudante de gradua√ß√£o.
    Siga EXATAMENTE esta estrutura de resposta, usando os t√≠tulos marcados com ###:

    ### üë®‚Äçüè´ Defini√ß√£o Formal
    [Forne√ßa a defini√ß√£o t√©cnica e acad√™mica do conceito aqui.]

    ### üó£Ô∏è 'Traduzindo' para o Portugu√™s Claro
    [D√™ uma analogia ou uma met√°fora simples e f√°cil de entender sobre o conceito aqui.]

    ### üö∂‚Äç‚ôÇÔ∏è Exemplo Pr√°tico
    [Crie um cen√°rio ou exemplo pr√°tico e cotidiano que ilustre o conceito em a√ß√£o aqui.]

    ### üß† Principal Te√≥rico Associado
    [Cite o principal psic√≥logo ou te√≥rico associado a este conceito.]
    """

    # Envia o prompt para o modelo Gemini e espera a resposta.
    resposta = modelo.generate_content(prompt_template)
    return resposta.text


# --- A INTERFACE DO SOFTWARE (A mesma de antes) ---
st.title("üß† Psique Explorer v2.0 (Conectado √† IA)")
st.write("Seu laborat√≥rio cognitivo de bolso, agora com o poder do Google AI.")
st.markdown("---")

conceito_usuario = st.text_input("Digite QUALQUER conceito de Psicologia para explorar:")

if st.button("Explorar Conceito"):
    if conceito_usuario:
        # Mostra uma mensagem de carregamento enquanto a "liga√ß√£o" √© feita.
        with st.spinner(f"Consultando a biblioteca universal sobre '{conceito_usuario}'..."):
            try:
                # Chama a fun√ß√£o que consulta a IA em tempo real.
                resposta_formatada = consultar_ia(conceito_usuario)
                # Exibe a resposta formatada na tela.
                st.markdown(resposta_formatada)
            except Exception as e:
                # Se der algum erro (chave errada, problema de conex√£o), avisa o usu√°rio.
                st.error(f"Ocorreu um erro ao conectar com a IA. Verifique sua chave de API e conex√£o com a internet. Detalhes: {e}")
    else:
        st.error("Por favor, digite um conceito na caixa de texto.")